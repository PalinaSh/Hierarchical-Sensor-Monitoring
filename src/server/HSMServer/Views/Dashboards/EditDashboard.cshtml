@using HSMServer.Controllers
@using HSMServer.Constants
@using HSMServer.Model.Dashboards

@model DashboardViewModel

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    var isModify = Model.IsModify;
    var isEmptyDashboard = Model.Panels.Count == 0;

    ViewData["Title"] = "Dashboard";
}


<div class="d-flex flex-column w-100">
    <div class="m-2">
        <div id="dashboardSettings" class="my-2 @(isModify ? string.Empty : "d-none")">
            <div class="d-flex justify-content-between mb-1">
                <h5 id="name">@Model.Name</h5>

                <a class="icon-link text-nowrap" href="javascript:editDahsboardSettings();" title='edit dashboard settings'>
                    <i class='fas fa-edit'><use xlink:href="#box-seam"></i> Edit
                </a>
            </div>

            <div id="markdown_description">@Model.Description</div> 
        </div>

        <div id="editableDashboardSettings" class="my-2 @(isModify ? "d-none" : string.Empty)">
            <form id="saveDashBoardForm" method="post" asp-action="@nameof(DashboardsController.EditDashboard)">
                <input class="d-none" asp-for="Id" value="@Model.Id"/>

                <div class="d-flex justify-content-between mb-1">
                    <input id="form_name" class="form-control" asp-for="Name" placeholder="@nameof(Model.Name)" required/>

                    <button type="submit" class="btn btn-primary independentSizeButton ms-2">Save</button>
                </div>

                <textarea id='form_description' class="form-control w-100" type='text' asp-for="Description" placeholder="@nameof(Model.Description)"></textarea>
            </form>
        </div>

        <div class="d-flex justify-content-end">
            <select asp-for="FromPeriod" form="saveDashBoardForm" id="from_select" class="form-select" style="width: auto">
                <option value="00:30:00">last 30 minutes</option>
                <option value="01:00:00">last 1 hour</option>
                <option value="03:00:00">last 3 hours</option>
                <option value="06:00:00">last 6 hours</option>
            </select>

            <a id="addPanel" class="icon-link text-nowrap ms-2 @(isModify ? "d-none" : string.Empty)" href="javascript:addPanel();">
                <i class="fa-solid fa-plus"><use xlink:href="#box-seam"></i> Add panel
            </a>
        </div>
    </div>

     <div id="noPanels" class="d-flex justify-content-center align-items-end noData-label @(isEmptyDashboard ?string.Empty  : "d-none")">
        <label>No panels</label>
    </div>

    <div id="dashboardPanels" class="flex-grow-1 dashboard mx-2 @(isEmptyDashboard ? "d-none" : string.Empty)">
        @foreach (var panel in Model.Panels)
        {
            @(await Html.PartialAsync("_Panel", panel))
        }
    </div>
</div>


<script>
    $(document).ready(() => {
        replaceHtmlToMarkdown('markdown_description');

        initDashboard();
        disableDragAndResize();
        $('#from_select').val('@Model.FromPeriod');
    });

    $('#dashboardPanels').on('click', 'div.panel a.removePanel', function () {
        let id = this.id.substring("remove_".length, this.id.length);
        let name = $(`#${id}`).find('#panel_name').text();
        showConfirmationModal(
            `Removing '${name}' dashboard`,
            `Do you really want to remove selected dashboard <strong>${name}</strong>?`,
            function () {
                $.ajax({
                type: 'DELETE',
                url: window.location.pathname + `/${id}`,
                cache: false,
                async: true,
                }).done(function (){
                    $(`#${id}`).remove();
                })
                .fail(function (data){
                    showToast(data.responseText)
                })
            }
        );
    });

    $('#saveDashBoardForm').on('submit', function (e){
        e.preventDefault();
        e.stopPropagation();
        let dashboard = $('#dashboardSettings');
        let arr = $(this).serializeArray();
        let panels = {};
        for (let i of $('#dashboardPanels').children('div')){
            panels[i.id] = {
                width: i.offsetWidth,
                height: i.offsetHeight,
                x: parseFloat(i.dataset.x || 0),
                y: parseFloat(i.dataset.y || 0)
            };
        }

        let object = {};
        arr.forEach((value, key) => object[value.name] = value.value);
        object.panels = panels;
        $.ajax({
            type: 'post',
            url: window.location.pathname,
            contentType: 'application/json',
            data: JSON.stringify(object)
        }).done(function (d){
            dashboard.find('h5#name').text(object.Name);
            replaceHtmlToMarkdownJquery(dashboard.find('div#markdown_description').text(object.Description))
            disableEdit();
        })
    })

    function addPanel() {
        $.ajax({
            type: 'GET',
            url: `@Html.Raw(Url.Action(nameof(DashboardsController.GetPanel), ViewConstants.DashboardsController))?dashboardId=@Model.Id`,
            cache: false,
            async: true,
        }).done(function (viewData){
            $('#dashboardPanels').append(viewData);
            $('#dashboardPanels').removeClass("d-none");
            $('#noPanels').addClass("d-none");
        })
    }

    function editDahsboardSettings() {
        $('#dashboardSettings').addClass('d-none');

        $('#addPanel').removeClass('d-none');
        $('#editableDashboardSettings').removeClass('d-none');
        enableDragAndResize();
    }
    
    function disableEdit(){
        $('#dashboardSettings').removeClass('d-none');

        $('#addPanel').addClass('d-none');
        $('#editableDashboardSettings').addClass('d-none');
        disableDragAndResize();
    }
    
    $('.panel.resize-draggable').on('click', 'a.removePanel', function (){
        let id = this.id.substring("remove_".length, this.id.length);
        let name = this.name;
        showConfirmationModal(
            `Removing '${name}' panel`,
            `Do you really want to remove selected panel <strong>${name}</strong>?`,
            function () {
                $.ajax({
                    type: 'DELETE',
                    url: window.location.pathname + `/${id}`,
                    cache: false,
                    async: true,
                }).done(function (){
                    $(`#${id}`).remove();
                }).fail(function (data){
                    showToast(data.responseText)
                })
            }
        );
    })
</script>
