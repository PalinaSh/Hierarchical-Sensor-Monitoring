@using HSMServer.Controllers
@using HSMServer.Model.Dashboards

@model List<DashboardViewModel>

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Dashboards";
    Layout = "~/Views/Tree/_Layout.cshtml";
}


<div class="flex-grow-1 m-2">
    <div class="d-flex justify-content-between my-2">
        <h5 class="m-0">Dashboards</h5>

        <div class='d-flex col-md-auto'>
            <a class="icon-link" method="GET" asp-action="@nameof(DashboardsController.EditDashboard)">
                <i class="fa-solid fa-plus"><use xlink:href="#box-seam"></i> Add dashboard
            </a>
        </div>
    </div>

    @foreach (var dashboard in Model)
    {
        <div class="d-flex flex-row align-items-center">
            <div class="card mb-2 w-100">
                <div class="card-body py-2">
                    <div style="font-weight: bold;">@dashboard.Name</div>
                    <div id="markdown_description_@dashboard.Id">@dashboard.Description</div>
                </div>
            </div>

            <div>
                <button id="actionButton" class="btn" data-bs-toggle="dropdown" data-bs-auto-close="true" aria-haspopup="true" aria-expanded="false">
                    <i class="fa-solid fa-ellipsis-vertical button-link"></i>
                </button>
                <div class="dropdown-menu dropdown-menu-end" aria-labelledby="actionButton">
                    <a class="dropdown-item text-decoration-none fw-normal button-link">View/Edit</a>
                    <a class="dropdown-item text-decoration-none fw-normal button-link">Remove</a>
                </div>
            </div>
        </div>
    }
</div>


<script>
    $(document).ready(() => {
        partId = "markdown_description_";
        //let list = $(document).find(`div[id^='${partId}']`);
        //for (let index in list) {

        //    let element = list[index];
        //    //let innerHtml = element.html();

        //    console.log(element);
        //    console.log(element);
        //    console.log("replaceHtmlsToMarkdown:", partId);

        //    if (innerHtml !== undefined) {
        //        element.empty().append(markdownToHTML(innerHtml));
        //        element.children().last().css('margin-bottom', 0);
        //    }
        //};
        $(`div[id^='${partId}']`).each((i, element) => {
            console.log(element);
            console.log(element[0]);
            console.log("replaceHtmlsToMarkdown:", partId);
            let innerHtml = element.html();

            if (innerHtml !== undefined) {
                element.empty().append(markdownToHTML(innerHtml));
                element.children().last().css('margin-bottom', 0);
            }
        })
        //replaceHtmlsToMarkdown('markdown_description_');
    });
</script>
