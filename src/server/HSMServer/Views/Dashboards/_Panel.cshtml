@using System.Text.Json
@using HSMServer.Constants
@using HSMServer.Controllers

@model HSMServer.Model.Dashboards.PanelViewModel

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    var jsonOptions = new JsonSerializerOptions(){ PropertyNamingPolicy = JsonNamingPolicy.CamelCase};
    var legendsTitle = @Model.Settings.ShowLegend ? "Hide legends" : "Show legends";
}

<div id="@Model.Id" class="panel resize-draggable">
    <div class="d-flex flex-column">
        <div class="d-flex flex-row justify-content-between align-items-center px-1 pt-1 name-draggable">
            <div class="d-inline-block overflow-hidden">
                <span class="fw-bold d-flex" title="@Model.Name" id="panel_name" style="white-space: nowrap">@Model.Name</span>
                @if (string.IsNullOrEmpty(Model.Description))
                {
                    <div style="height: 1.5rem"></div>
                }
                else
                {
                    <span class="fw-lighter d-flex" id="panel_description" title="@Model.Description" style="color: grey; white-space: nowrap;">@Model.Description</span>
                }
            </div>
            <div class="align-self-start">
                <button id="actionButton" class="btn p-1" data-bs-toggle="dropdown" data-bs-auto-close="true" aria-haspopup="true" aria-expanded="false">
                    <i class="fa-solid fa-ellipsis-vertical button-link"></i>
                </button>
                <div class="dropdown-menu dropdown-menu-end" aria-labelledby="actionButton">
                    <a id="toggle_@Model.Id" class="toggle-legend dropdown-item text-decoration-none fw-normal button-link">@legendsTitle</a>
                    <a class="dropdown-item text-decoration-none fw-normal button-link" asp-controller="@ViewConstants.DashboardsController" asp-action="@nameof(DashboardsController.AddDashboardPanel)" asp-route-dashboardId="@Model.DashboardId" asp-route-panelId="@Model.Id">Edit</a>
                    <a id="remove_@Model.Id" class="removePanel dropdown-item text-decoration-none fw-normal button-link">Remove</a>
                </div>
            </div>
        </div>
    </div>
    
    <span id="emptypanel_@Model.Id" style="font-size: larger; position: fixed; z-index: 300; transform: translate(100px, 100px); color: rgb(128,128,128); display: none">Empty panel</span>
    <div id="panelChart_@Model.Id"></div>
</div>


<script>
    $(document).ready(function () {
        let settings = @Html.Raw(JsonSerializer.Serialize(Model.Settings, jsonOptions));
        let values = @Html.Raw(JsonSerializer.Serialize(Model.Sources.Values, jsonOptions));
        let dashboardpanels = $('#dashboardPanels');
        initMultyichartCordinates(settings, values, '@Model.Id').then(
            (data) => initMultichart('panelChart_@Model.Id', Number((settings.height * (dashboardpanels.height() > 1400 ? 1400 : dashboardpanels.height())).toFixed(5)), settings.showLegend).then(
                        (data) => {
                                values.forEach(function (x) {
                                    insertSourcePlot(x, 'panelChart_@Model.Id', '@Model.Id', '@Model.DashboardId')
                                })

                                $('#panelChart_@Model.Id').on('plotly_relayout', function (e, updateData){
                                    let rect = e.target.getBoundingClientRect();
                                    let emptypanel = $('#emptypanel_@Model.Id');
                                    emptypanel.css('transform', `translate(${rect.width / 2 - emptypanel .width() / 2}px, ${rect.height / 2}px)`)
                                })

                                if (values.length === 0) {
                                    $('#emptypanel_@Model.Id').show();
                                }

                                replaceHtmlToMarkdown('panel_description')

                                window.dispatchEvent(new Event('resize'));
                            },
                        (error) => showToast(error)
            )
        )
    })
</script>
