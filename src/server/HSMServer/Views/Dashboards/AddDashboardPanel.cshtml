@using HSMServer.Controllers
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    var isModify = true;
    var name = "qwe";
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Tree/_Layout.cshtml";
}
<script>
    var sourceLink = '@Url.Action(nameof(DashboardsController.GetSource))';
</script>

<div class="w-100 overflow-y-auto">
    <div>

    </div>
    <div id="panelSettings" class="my-2 @(isModify ? string.Empty : "d-none")">
        <div class="d-flex justify-content-between mb-1">
            <h5>@name</h5>

            <a class="icon-link text-nowrap" href="javascript:editPanelSettings();" title='edit dashboard settings'>
                <i class='fas fa-edit'>
                    <use xlink:href="#box-seam">
                </i> Edit
            </a>
        </div>

        <div id="editablePanelSettings" class="my-2 @(isModify ? "d-none" : string.Empty)">
            <form method="post" asp-action="@(isModify ? nameof(DashboardsController.EditDashboard) : nameof(DashboardsController.AddDashboard))">
                <input class="d-none" asp-for="@name" value="@name"/>

                <div class="d-flex justify-content-between mb-1">
                    <input class="form-control" asp-for="@name" placeholder="@name"/>

                    <button type="submit" class="btn btn-primary independentSizeButton ms-2">Save</button>
                </div>

                <textarea id='description' class="form-control w-100" type='text' asp-for="@name" placeholder="@name"></textarea>
            </form>
        </div>

        <div id="markdown_description">@name</div>
    </div>

    <div id="multichart" class="w-100 h-75 dropzone me-2 pe-2" style="box-sizing:content-box"></div>
    <div id="plots" class="mt-1">
        <ul id="sources" class="list-group">
        </ul>
    </div>
</div>


<script>
    $(document).ready(function () {
        initMultichart('multichart');
         
        $('[id^="source"]').on('input', '.form-control-color', function () {
            $(this).attr('value', this.value);
            let id = this.id.substring("color_".length, this.id.length);
            
            updateColor($(this).val(), id)
        }).on('input', '.form-control', function () {
            $(this).attr('value', this.value);
            let id = this.id.substring("name_input_".length, this.id.length);
                      
            updateName($(this).val(), id)
        }).on('click', 'button',function (){
            let id = this.id.substring("deletePlot_".length, this.id.length);
            let model = getCurrentPlotInDashboard(id)
            if (model !== undefined) {
                Plotly.deleteTraces('multichart', model.id).then(function (){
                    $('[id^="source"] li')[model.id].remove();
                    updateCurrentPlotsIds(model.id, id)
                })
            }
        })
    })  
    
    function editPanelSettings(){
       $('#panelSettings').addClass('d-none');
       $('#editablePanelSettings').removeClass('d-none');
    }
</script>