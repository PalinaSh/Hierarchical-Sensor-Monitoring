@using HSMServer.Extensions
@using HSMServer.Model.Authentication
@using HSMServer.Model.UserTreeShallowCopy

@model FolderShallowModel

@{
    var user = User as User;
    var data = Model.Data;

    var showIcons = user.TreeFilter.ByVisibility.Icons.Value;
    var showErrorsCount = user.TreeFilter.ByVisibility.ErrorsCount.Value;
}


<li id='@data.Id' title='@data.Tooltip' data-jstree='@Model.ToJSTree()'>
    @Html.Raw(data.Name.GetShortNodeName())

    @if (!Model.IsEmpty && showIcons)
    {
        @if (Model.IsAccountsEnable)
        {
            <span>
                <img class="tree-png-icon" src="~/dist/user.png" alt="!" />
            </span>
        }
        else if (Model.IsAccountsIgnore)
        {
            <span>
                <img class="tree-png-icon" src="~/dist/user-crossed.png" alt="!" />
            </span>
        }

        @if (Model.IsGroupsEnable)
        {
            <span>
                <img class="tree-png-icon" src="~/dist/users.png" alt="!" />
            </span>
        }
        else if (Model.IsGroupsIgnore)
        {
            <span>
                <img class="tree-png-icon" src="~/dist/users-crossed.png" alt="!" />
            </span>
        }

        @if (Model.IsGrafanaEnabled)
        {
            <span>
                <img class="tree-png-icon" src="~/dist/grafana.svg" alt="!" title="Grafana" />
            </span>
        }
    }

    @if (showErrorsCount && Model.ErrorsCount > 0)
    {
        <span class="tree-errors-count">@Model.Errors</span>
    }

    @foreach (var child in Model.Products)
    {
        <ul>@await Html.PartialAsync("_TreeNode", child)</ul>
    }
</li>